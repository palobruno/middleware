<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
	xmlns:int-ws="http://www.springframework.org/schema/integration/ws"
	xmlns:int-xml="http://www.springframework.org/schema/integration/xml"
	xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:int-file="http://www.springframework.org/schema/integration/file"
	xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/jms http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd
		http://www.springframework.org/schema/integration/ws http://www.springframework.org/schema/integration/ws/spring-integration-ws.xsd
		http://www.springframework.org/schema/integration/xml
    	http://www.springframework.org/schema/integration/xml/spring-integration-xml.xsd
    	http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd
    	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
    	http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
    	http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
    	http://www.springframework.org/schema/integration/jdbc http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc.xsd">

	<bean id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="jdbc:postgresql://localhost:5432/acme" />
        <property name="username" value="postgres" />
        <property name="password" value="root" />
   </bean>

	<bean id="colaEntrada"
		class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="middleware-queue-in" />
	</bean>

	<int-jms:message-driven-channel-adapter
		id="colaPagosInAdapter" destination="colaEntrada"
		channel="xmlPagosInChan" />
	<int:channel id="xmlPagosInChan" />

	<int:chain input-channel="xmlPagosInChan">
		<int:splitter id="paymentsInSplitter">
			<bean class="com.acme.is.PaymentsSplitter" />
		</int:splitter>

		<int-xml:xpath-router id="paymentRouter"
			evaluate-as-string="true">
			<int-xml:xpath-expression
				expression="paymentList/payment/bank" />
			<int-xml:mapping value="1" channel="acmeDbChan" />
			<int-xml:mapping value="2" channel="xmlToSoapTransformerChan" />
			<int-xml:mapping value="3" channel="xmlToCsvTransformerChan" />
		</int-xml:xpath-router>
	</int:chain>
	
	<int:channel id="xmlToSoapTransformerChan" />
	<int-stream:stdout-channel-adapter id="xmlToCsvTransformerChan" />

	<int:transformer id="xmlToSoapTransformer"
		ref="xmlSoapTransformerBean" input-channel="xmlToSoapTransformerChan"
		method="xmlToSoap" output-channel="newBankWsChan" />
	<bean id="xmlSoapTransformerBean"
		class="com.acme.is.XmlSoapTransformer" />
	<int:channel id="newBankWsChan" />

	<int-ws:outbound-gateway id="newBankWsGateway"
		request-channel="newBankWsChan"
		uri="http://localhost:8080/NewBankPagosWS/"
		reply-channel="newBankWsEnricherChannel" />
		
	<int:header-enricher input-channel="newBankWsEnricherChannel" output-channel="normalizerRouterChan">
		<int:header name="type" value="soap"/>
	</int:header-enricher>
	
	<int:channel id="normalizerRouterChan" />

	<int:channel id="fileWriteChan"/>
	<int:service-activator input-channel="fileWriteChan"
		output-channel="filesOut" ref="fileHandler" />

	<int-file:outbound-channel-adapter
		id="filesOut"
		filename-generator-expression="headers['packRefId']+'.csv'" 
		directory="file:target/output/PAYIN" />

	<bean id="fileHandler" class="com.acme.is.FileOutHandler" />

	<int-file:inbound-channel-adapter id="fileIn"
			directory="file:target/output/PAYOUT"
			filename-regex="[0-9]+.csv">
		<int:poller id="poller" fixed-delay="5000"/>
	</int-file:inbound-channel-adapter>
 
	<int:header-enricher input-channel="fileIn" output-channel="fileToStringTrans">
		<int:header name="packRefId" expression="payload.name"/>
		<int:header name="type" value="csv"/>
	</int:header-enricher>
	
	<int:channel id="fileToStringTrans"/>
	<int-file:file-to-string-transformer input-channel="fileToStringTrans" output-channel="normalizerRouterChan"/>

	<int:channel id="acmeDbChan" />
	<int:chain input-channel="acmeDbChan" output-channel="TEST">
		<int:transformer id="xmlToDbTransformer" ref="xmlToDbTransformerBean" method="xmlToDb" />
		
	    <int-jdbc:outbound-gateway
	    	data-source="dataSource"
	        update="insert into pagos (sucursal_origen, cuenta_origen, sucursal_destino, cuenta_destino, fecha, hora, moneda, importe, referencia, observaciones)
	                           values (:payload[sucursal_origen], :payload[cuenta_origen], :payload[sucursal_destino], :payload[cuenta_destino], :payload[fecha],
	                                   :payload[hora], :payload[moneda], :payload[importe], :payload[referencia], :payload[observaciones])">
	    </int-jdbc:outbound-gateway>
	</int:chain>

	<bean id="xmlToDbTransformerBean" class="com.acme.is.XmlToDbTransformer" />

	<int-stream:stdout-channel-adapter id="TEST" />
	
	
	<!-- NORMALIZER -->
	
	<int:header-value-router input-channel="normalizerRouterChan" header-name="type">
	    <int:mapping value="soap" channel="soapToXmlTransformerChan" />
	    <int:mapping value="csv" channel="csvToXmlTransformerChan" />
	    <int:mapping value="sql" channel="sqlToXmlTransformerChan" />
	</int:header-value-router>

	<int:transformer id="soapToXmlTransformer"
		ref="xmlSoapTransformerBean" input-channel="soapToXmlTransformerChan"
		method="soapToXml" output-channel="aggregatorChan" />
		
	<int:channel id="aggregatorChan" />
	
	<int:transformer id="csvToXmlTransformer"
		ref="csvToXmlTransformerBean" input-channel="csvToXmlTransformerChan"
		method="csvToXml" output-channel="aggregatorChan" />
		
	<bean id="csvToXmlTransformerBean"
		class="com.acme.is.CsvXmlTransformer" />

	<int:channel id="aggregatorChan" />

	<int:aggregator input-channel="aggregatorChan"
		output-channel="xmlPagosOutChan"
		correlation-strategy-expression="headers['packRefId']" 
		ref="aggregatorBean" />
	<bean id="aggregatorBean" class="com.acme.is.PaymentsAggregator" />

	<int:channel id="xmlPagosOutChan" />

	<bean id="colaSalida"
		class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="middleware-queue-out" />
	</bean>

	<int-jms:outbound-channel-adapter
		id="colaPagosOutAdapter" destination="colaSalida"
		channel="xmlPagosOutChan" />

</beans>
